---
- hosts: all
  become: yes

  pre_tasks:
    - name: update apt cache if needed
      apt: "update_cache=yes cache_valid_time=36000"

    # - debug: var=repo_stat
    - name: Check if git repo exists
      stat: path=/opt/yolo
      register: repo_stat

    - name: Fetch the Yolo git repo
      git:
        repo: https://github.com/nkmakau/yolo.git
        dest: path=/opt/yolo
      when: not repo_stat.stat.exists

  tasks:
    # Install nodejs and npm on the client host
      - block:
            - name: Install nodejs and npm on the client
              apt:
                  state: present
                  name: 
                        - nodejs
                        - npm
                        - build-essential
            
            - name: Check git repo folder exists
              stat: path=/opt/yolo/client
              register: git_stat
            
            - name: Copy the client directory to vagrant
              command: mv /opt/yolo/client /home/vagrant
              when: git_stat.stat.exists

            - name: Install required modules in package.json
              command: >
                    chdir=/home/vagrant/client
                    npm run build

            - name: Run NPM for production
              command: >
                    chdir=/home/vagrant/client
                    npm install -g serve

            - name: Create nohup.out file
              file:
                    path: "/home/vagrant/nohup.out"
                    state: touch

            - name: Start the client app
              shell: 
                    "nohup serve -s build -l 3000 </dev/null >/dev/null 2>&1 & "
              args:
                    chdir: "/home/vagrant/client"
        when: inventory_hostname == "client"

            # Install nodejs and npm on the backend host
      - block:
                - name: Install nodejs and npm on the backend hosts
                  apt: 
                        state: present
                        name:
                              - nodejs
                              - npm
                - name: Check git repo folder exists.
                  stat: path=/opt/yolo/backend
                  register: git_stat
                
                - name: Install required modules in  package.json
                  command: >
                          chdir=/home/vagrant/backend
                          npm install

                - name: Install PM2 (to run our app)
                  command: >
                          chdir=/home/vagrant/backend
                          npm install pm2 -g

                - name: Spawn PM2 to become active
                  become: yes
                  become_user: vagrant
                  command: pm2 list

                - name: Configure PM2 to start automatically on system bootup
                  command: pm2 startup
                
                - name: Start the backend using PM2
                  become: yes
                  become_user: vagrant
                  command: >
                          chdir=/home/vagrant/backend
                          pm2 start --name yolo_app npm -- start
                
                - name: Save the list of process for automatic restart after a system reboot
                  command: pm2 Save
        
        when: inventory_hostname == "backend"

        #Install mongo on the db host
      - block: 
            - name: Impor public GPG key for the latest stable version of MongoDB
              apt_key: keysever=hkp://keyserver.ubuntu.com:80 id=7F0CEB10 state=present

            - name: Add MongoDB respository
              apt_respository: repo='deb [ arch=amd64, arm64] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multivers' state=present
            
            - name: Update cache
              apt: "update_cache=yes"

            - name: Install MongoDB
              apt: pkg=mongodb-org state=latest update_cache=yes

        when: inventory_hostname =="mongodb"

        handlers:
            - name: Start MongoDB
              apt: name=mongod state=started



    




          
          


